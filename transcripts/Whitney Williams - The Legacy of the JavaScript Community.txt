Whitney Williams - The Legacy of the JavaScript Community
>> All right, everyone, here we are. It is the last talk. It's almost over. I'm excited to introduce Whitney who is going to talk to us about the legacy of the JavaScript community. A warm welcome for Whitney. [Applause].  Hi, my name is Whitney Williams. My job is to translate design thinking and UX principles into performant-friendly and user-friendly front-end code. Why am I here today?  I'm here to spark a conversation about the legacy of the JavaScript community. I've talked to a lot of you already but what does this mean and what is your talk about?  I've given away a little piece of it but hopeful stayed enough to make you stay until the very end of the conference. If you have questions, you can follow me on Twitter. I can talk to you at the after party where finally I can get excited and not have to go to bed early!  This story is pretty simple. When I was a little girl, every morning, I was really terrible at brushing my hair. That seems likes yeah, how does this fit into a JavaScript conference?  I promise it is coming. When I was little, I was terrible at brushing my hair, and my mom would help me brush it out. Every morning, I had a question for her. The question was, "What do you think I'm going to be when I grow up?"  My mom came up with a different answer every morning. He said, "I think you're going to be an astronaut." I went to space camp. I said what am I going to be when I grow up?  "I think you're going to be a baker." I think yes, I could be a baker too. Every morning, she would tell me a different answer, and I realised one morning, she wasn't going to give me an answer that was right. She couldn't predict the future, so I just stopped asking. It was that sudden. But I think it is that simple routine that really cemented my belief that I could do anything. But telling that story, the reason I tell you, it is because I think small actions have a really big impact in the world. And, in JavaScript, we're so wrapped up in the immediacy, so wrapped up in seeing results like right now, and we've heard people talk about shaving off milliseconds, and, when it comes to JavaScript, that stuff is really, really cool, but it also has sort of a darker backside where we sort of forget that the actions that we take right now can sometimes take months or even years to see the full effect. When I talk about full effect, I'm talking about in the community, not just in the browser, but in the people that surround us, and so what may seem like these small, trivial, almost kitschy behaviours can become significant in ways we didn't imagine. When I told you the story about me brushing my hair, it seemed silly, but it was impactful in how I saw myself as a person in the world - like what can I really be when I grow up?  Throughout this talk, I want you to think not just who you can be when you grow up, but who can the community be?  Who can JavaScript be?  What is JavaScript going to look like in the future?  So I think another thing to think about is our community really needs leaders. The JavaScript community and the people who embrace JavaScript grow, it becomes ever more important we need the kind, gentle guidance that my mom gave me when I was a little kid. But the big thing is that it's not going to be a parent or standards body like TC39 that maybe leads the way and says, "This is what is going to happen." It's not going to come from one individual person, and it's not going to come from a tiny little group of people, but instead, leadership is going to come by the many and not by the few, so it is not one person, it's all of us, and so it is the responsibility of all of us just to come together and determine the legacy of the JavaScript community. So, when I say legacy, like what is legacy even mean?  I think a lot of times in software, we tend to associate the word "legacy" and specifically legacy in the sense of code as being old, broken, irrelevant, as something that is really almost negative, like when was the last time that you heard someone talk about legacy software?  And like a in a great and exciting way, and I can't wait to get this on my marsh working?  I think that that sort of sad because originally, when the word "legacy" originated in the 14th century, it had a completely different meaning. That meaning was a lot more affirmative, a lot more positive, and it was this:  a body of Terence sent on a mission. So -- a body of persons sent on a mission. What I like to refer to when I think of legacy is that this is who we are as JavaScripters. We're a body of persons sent on a mission to shape the world, not just through our code but also by our vision for the future of the language and the people that surround it. Seeing ourselves in this way, like seeing ourselves as part of this living legacy, as stewards of the greater good, is critical for two really important reasons. Agency and empowerment. When I say agency, I mean we don't need to wait for the permission of someone else to make a change or to lead or to take charge, and so this ability to shape the direction and influence the future of our community, like that's super impactful, and this directs is just incredible. I mean, when I talk about empowerment, I mean that it ensures by being active participants rather than passive bystanders, we don't leave the hard work of care taking, the hard work of inclusion, and the hard work of community to others. Lucky there is everybody's job. This is my - like in is my job, your job, everybody's job. This is the price you pay for being a member of the JavaScript community.  So, when I say "legacy" I would like really to boil it down into two simple things, two simple words and that is:  people and progress. I think a lot of us, it is really difficult to boil stuff down to just the most common tiny little factor that everyone understands, but the purpose of JavaScript is people, and I think a lot of times, we get really mixed up because we think JavaScript is a lot of things - like JavaScript is conferences, and JavaScript is functions, and like JavaScript is all of these different things, but that's a mistake. JavaScript really is the people and the community that surrounds the language and the people that interact with it rather than just the language itself. So what I like to say when I say "legacy of the JavaScript community," when I think about that legacy, what I think about is not JavaScript and not what new features are we going to add, how are we going to make it faster and more impactful?  How are we going to get it running in all of the browsers so super fast and offline first, and all these things, those are all great, but people first always. 
When we define our vision, our ideas about the legacy of the JavaScript community, maybe it makes a little bit more sense to sort of step back in history before a sort of attempt to merge this path forward. When you think about it, from the earliest days, JavaScript has been a foundational technology, and despite the central role, something really unfortunate has happened. I think what has happened is that a lot of people tend to look down on us as JavaScript developers, so developers who write primarily JavaScript are considered less than developers who write code for other languages. A lot of times because we say, "JavaScript has really broad appeal, and a lot of people can get started with JavaScript. It's relatively easy to use." We use this as evidence that JavaScript has an inferior status, but it is not a real programming language, that you're not a real developer. I think that is just flat-out wrong, to be honest. So these classifications, they're misguided, and I think when we look at JavaScript as a language, it brings to light a lot of JavaScript subtleties, and the language reveals that JavaScript is actually really, really nuanced and complex, and we look at JavaScript when you think I've got this totally figured out, I'm going to run my function, and you run it, and you think, "Wait." That is a lot how we sort of need to think about the JavaScript community. On the surface, JavaScript may seem incredibly simple, and it may seem really easy just to apply these stereotypical programmer tropes to say, "I know what a JavaScript developer looks like."  But on further inspection these I think that clichés are wrong", untruthful, misguiding, and limited, and that's something I would really like to change.  So who hey as a community?  If we brush aside these silly ideas, who are we really?  What does meaning a community in the modern age really mean?  I think, honestly, community can be a group of members who share common characteristics or interests and who often share a common historical and cultural heritage. Some of you might, when I say common cultural and historical heritage, might get a little bit shaky. Stick with me here for a second. A superficial glance at this definition can lead us in the wrong direction. Look at you today, what I see is incredible diversity, and having listened to all the talks, I've heard a lot of diversity and a lot of support for diversity, and we are people of all ages, genders, people of all backgrounds, different sorts of beliefs, and a lot of us have different mother tongues - that's something I've noticed at JSConf EU in particular, there are a lot of different spoken languages. We also come from a lot of different places, and so the country that's printed on our passport may not actually be the country that we most identify with. And maybe it is just one part of an incredibly larger more detailed story. So having heard all of the talks, having listened to people in the hallway, having seen everyone interact and seeing people treat each other with so much love and respect, what I would like to say is that it's clear that the characteristics and the interest that we share resolve around JavaScript and programming, and around this need to make and build, and that is something that, regardless of where you come from, regardless of what gender you are, regardless of how old you are, like JavaScript and this need to make cool stuff, like that is something that we all share. So, when I talk about heritage, I'm not talking about our genetics, I'm not talking about a physical place or a spoken language, but a belief in the power of the web, and, most importantly, it is not these differences, or it is not despite these differences but actually because of these differences that we are so uniquely prepared to share in the mission of the web. So, the web is here to stay, and because of that, we as JavaScripters, as individuals and as a community, we are obligated to create and maintain the culture of the ideas, the beliefs that will be carried forth by the next generation of JavaScripters, and those in a future that is so distant that we can hardly imagine what it is going to become, so the culture that we create today is going to go for the and shape the next generation of JavaScripters. Whether we actually intend for it or not, that's something that's going to happen.  
          So, one of the things I think is really, really important is that JavaScript is open to all. One of the language's most most compelling features is its openness. Even before we write our first function, many of us were looking into other people's website and viewing the source and trying to figure out, "How did they do that?  What did they write that made a particular thing happen?"  We might not understand how code actually works, we might not understand who makes it useful or who wrote it, but it is the simple act of opening the control panel and viewing this source, and being curious is instrumental because we're we might not consider ourselves developers at this point, but it is this curiosity and in desire to understand JavaScript and the desire to understand what is going on under the hood which actually grants us membership to the community.  I think a lot of times, when we are trying to sort of design these barriers to entry of who is a JavaScripter, like who gets to label themselves as a developer, what we hear a lot of times is negativity, and we hear this community of voices that would like to set up barriers that I think are just, they're wrong, and they're silly, and they're not helpful, and we limit membership because we are trying to sort of get a handle on things. And so what we end up hearing a lot of times from people who maybe have good intentions, but go about things the wrong way is stuff like, these people are not developers. These people don't belong. These people don't use JavaScript the same way that I use JavaScript, and so they don't struggle with the same concepts that I'm struggling with, so they're probably just pretending they're not real JavaScripters. You know what?  That's just wrong. Like that's not true. [Applause].  
When they feel as though defining the JavaScript community in such a broad way is problematic, why is that?  Why are we trying to figure out who we are. Why are we figuring out who are our people?  That's like finding your community. That's human nature. And that's okay. It is okay to want to know that you belong. But when we create this really broad definition, it has some really side effects. One of those things is that by creating this broad definition, and it includes a lot of people that maybe we wouldn't have initially labelled ago JavaScript developers, and that's okay, but I will give you a couple of examples of people that you might not think of as JavaScripters, but going on forward after - JavaScript developers but going forward today, I would like you to rethink about that. JavaScript developers includes a ten-year-old I taught to script on his homework and he said I've done all of the Code Academy for JavaScript and this is super interesting. And this kid is ten. Like holy cow, that's phenomenal. The JavaScript community includes people like designers who are writing CSS most of the time and they can write enough to get the stuff working. We may not think of them as JavaScript developers, but we should. I think also it includes people who are writing JavaScript, make on the side, part-time, and it is not a career for them, and maybe they are in college, or maybe they are in code school looking for a new career. When I said "code school" maybe some of you thought, "I don't know about that." When I say "code school" what I don't mean is that students become members as soon as they graduate. What I mean is not that they built their first website or finish, I mean on the very first day of class, like becoming a member of the JavaScript community is not something that magically happens because someone granted you a - magically happens because you were granted a privilege. It happens because you got curious. Like every one of you belong here. You are enough. [Applause]. So, just starting of thinking we can sort of erect, that we can define a set of rules about who belongs in the JavaScript community is limiting, and it's defeating, and it is wrong. So, how do we lead a community that is so super diverse?  How do we lead a community now and in the future. I think that earlier, when we [sound cut] it is time now to examine the word "leadership" and leadership is something pretty simple. It is an act or an instance, it is a really fleeting moment. A leader is someone who provides guidance; a leader is someone who provides direction. But let's think about that a little bit more. An act or an instance. If we dive deeper, we find that leadership isn't a status that's granted after months or years of slowly gaining recognition. Leadership is something that can be fleeting, it can happen in a moment, and then it can disappear a moment later. This definition is really incredible. When you think about it, it is quite empowering, because in order to be a true leader in the JavaScript community, you don't need to be on the stage. You don't need a lot of Twitter followers, you don't need a blog or a deep understanding of JavaScript itself. And when I think it is really about is that leadership is not the loudest voice in the room. Yes, of course there are things like technical leadership, so, researching a project and understanding the costs and benefits of different frameworks, like absolutely, that's a form of leadership. Being able to speak confidently about what is the right trace for your project, that's leadership, but being a leader, showing a leader can also be entirely non-technical, and often that can mean simply doing the right thing in the moment. What I'm talking about is making space for marginalised people of the community to speak. What I'm talking about is listening even when you think that you already know the best, making the effort to use the correct pronounce for someone, not the preferred - just the ones that are right. And I think what is really important that being a leader is not being the loudest voice in the room. Being a leader is actually not about having experience, it is just about helping others learn. It is about creating a culture where it is okay to make mistakes, it is okay to be wrong, it is to sort of say, "Hey, I don't know something." It's not a culture where we invite retribution or start to pile on and say, "Yes, you shouldn't have done that." We want to create a culture where we have kind, constructive feedback. Being a leader is not doing the right thing when it is easy, it is doing the right thing when it's hard - especially when it is hard. A thing that I would also like to say, that really before we continue, I want to step back and think about something, and there was a really, really great talk yesterday that touched on this, and, unfortunately, one aspect of the tech community is that sadly leadership and participation are just not equally attainable to everyone. I it is frustrating and wrong. Being part of this community, being part of this conference, being part of just the world at large, the boundaries that are faced by membership, by members of the JavaScript community are they're just - they're really harmful, and harmful not just to this one individual but harmful to the entire community, because they obstruct access and progress to the individual, but they also create these ripple effects that we don't see until later on. Like I said I wanted to grow up to be succeed in my mom couldn't predict the future. A lot of the time when we talk about leadership or talk about small actions, being nice to someone, making space for someone, letting someone speak may seem like an incredibly small thing to you in the moment, but ten years later, it may be that tiny moment they see as like the pinnacle of how they started to feel like they were truly part of the JavaScript community. So I think ultimately, being a part of this community, those of us with more power, with more voice, with more privilege, what we need to do is to try to remove the barriers for other people, barriers that are both seen and unseen, remove the barriers for the people and support them, and encourage them to face obstacles when we haven't had to overcome those obstacles ourselves. We can really create real change.  So as the language of the web, JavaScript is uniquely positioned in the sense that we have a power to affect the broader community, more than just JavaScript, we can really change the world. And so before we sort of look back on the people and the technologies that came before us, like don't be field, JavaScript is here for now, and it's going to be here in the future, but it is not always going to be like that. It is really easy to believe that the blog post that we read, the podcast that we listen to, the MPM packages and the GitHub repositories that we know are always going to be there because we download them and build with them every day, the conferences where we love, the meet-ups where we gather, we have a tendency to believe they are always there, like in the atmosphere, never going to go away. And that's wrong. And the reason these things are not always going to be there is because they are built by the community. And is to the JavaScript community, like all community, is made up of individuals. We are building the products, the tools, and the languages of the future. We are shaping the world in exciting and important ways, but without the people, everything else disappears. JavaScript is underpinned by all of these individuals, and you can start taking off one by one by one, you could remove each one of us and JavaScript might be there, but if you took away all of the people, JavaScript itself is just not useful any more. So, in closing, I would sort of like to leave you with this:  every morning, when you wake up, when you're getting ready for the day, when you're thinking about the future, and you're thinking about maybe what you want to be when you grow up, or how you can contribute to the future, I would like you to think sort of what can you contribute to to the community?  What can the community be when it grows up?  Each of us possesses different skills and how to go about best when thinking about leading. What would you wish for our community. The beat of JavaScript, this community we've built, and this technology that we love, is that by each of us as individuals, by doing our part and leading and contributing in ways that don't disguise our diversity but instead just sort highlight, something magical happens, JavaScript becomes this living legacy of not just - what it becomes like I said before is this body of persons that was sent on a mission to shape the road, not just through code, but also by our vision for the language and the vision of the future for the community of people that surround it. Thanks. [Applause]  [Cheering]. 
          >> Thank you, Whitney, for rounding off the conference with such an inspiring talk, such a pertinent talk. Before you all run off, we have a few last things that are going to happen. I have one announcement coming from one of our speakers. Nidin Vinayakan, he did a talk earlier about shared memory in JavaScript, and he wanted to let you all know that his project Turboscript is open source. You can find it on GitHub. And he would love to hear from all of you. As a second announcement, we have had a raffle at the Google Cloud table, and we are going to let Miles come up and take over regarding that. 
>> Quick round of applause for everyone who organised this amazing event. [Applause].  [Cheering]. Every little detail has been phenomenal. I accidentally had Twitter open instead of the names of the winners. Do you want me to read you tweets instead?  We've already sorted these, and the first winner, just get up and come up here. If I don't see you, we will go to the next person. The first winner is Bimbola Aidowu. Big round of applause. Wooh!  [Applause].  Thank you for coming and giving us the time to try everything. We really appreciate it. Thank you. Okay. Coming up next:  Bram Gotink. Wooh!  [Applause].  Thank you very much, Bram. And, last but not least, Loenid Peneethch Madek Panik?  [Applause].  Thank you very much. Thank you all so much for your time, letting me be up here, to all speakers - you did a wonderful job, I know how hard it can be - and the organisers. This place is very special, and I appreciate being here. Thank you. [Applause].  
>> Obviously, we rehearsed this. At least five times. So this is JSConf EU number 8. [Applause].  We could not do this without our sponsors, and I will leave the list up a little bit. Yeah. Just marvel at all these sponsors. Everyone who is here from a sponsor, please stand up so we can see who is here and who supported the event. Everyone, get up!  [Applause].  I would like to invite two more people on stage now, which is Fayle and Zimona. They've done the communication invitations run the errors in the back. So a huge applause for them. [Applause].  Thank you. I'm not sure if they're prepared to come over, but Marina and Bjorn run the hall, doing the set-up, the design, the logistics, Luisa and Ronya. They're responsible for making this happen. There's no way we can do this without them. One more big applause for them. Thank you. [Applause].  Thanks to everyone who was responsible for food. We've seen lots of feedback on Twitter. You all loved the food!  Thank you very much. [Applause].  And this looks and sounds amazing because the team spent lots of hours to get this right, so thanks again to them as well the light and sound team. Thank you to the CSSConf team as well. If any of you is here, please come up as well. This is our sister conference that happened on Friday. Lots of them are really nice little things that you see around the hall is actually all their work. Special thanks to everyone who has contributed to the community lounge, the lounge either with talking or organising. Thanks to that. Thanks to them, sorry!  It has been a long day. Thank you to the live captioning team. I hope you can hear the applause. You were amazing. Thank you very much. 
CAPTIONER:  Thank you!  
>> Next, we would like to invite all speakers on stage. Everyone who has been speaking here, or next door, and screw it, if you were speaking at the community area or sponsor booths, also come up on stage and get a very well deserved applause. [Applause].  We're going to need a bigger stage next year. A little selfie moment there. All right, final thank you. It is you. Thanks to everyone who came to this and spent two days here, who spent all the money to get here to make this possible. Thanks to all the attendants, and, to celebrate, we are closing with a traditional family photo which means everyone else needs to come up on stage as well!  [Applause].  
>> Before you join us up on stage, two last instructions for you:  first of all, we have another party at the Hoppetauser tonight. We will pay the drinks, but there will be no free food. We have a food truck, but the bad news is whoever wants meat has to go else where the food struck is serving veggie food as well. It's fairly prised and they're prepared for 200 people. Let's see thousand how this works. Tomorrow, with our famous brunch, at Cafe Dacha, please be sailor, the same name as compared to last year, but it is another location. They have a new branch that's quite close to here, so the same restaurant, another location tomorrow. It begins at 10 am and ends at 2 pm, and this was it. Please now come over for the photo before we end JSConf EU 2017. Thank you. 
[Music]. 
>> Please leave this location within the next 20 minutes. We will close down everything and the entrance to the venue is outside. See you next time!  