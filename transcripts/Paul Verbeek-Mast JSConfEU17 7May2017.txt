Calendar / Kalender (aka, the fun of locali[zs]ation)
Paul Verbeek-Mast

Live captioning by White Coat Captioning
REMY: Just a couple of people.  Grab your seats.  So next up is Paul.  I've instantly forgotten the last part of your name so I'm not going to give that and we've already agreed that we won't read out the title of his talk because only the first bit is good for me, and the rest is localisation, I guess, so please give Paul a really warm welcome as he takes us through localisation.  [Applause]
PAUL: Thank you.  This is the last part of my name, it's Verbeek-Mast, recently got married and added my girlfriend's last name to it.  Up until last week I was working at Booking.com as a front end developer, but I've now joined a start-up in the Netherlands called SpronQ and I'm also an organiser of the Fronteers conference this year, which will be the 10th anniversary, which is cool.
So I will also not tell you what it all says but it talks about localisation of a calendar that we did at Booking.com, so these are almost all - these are part of the languages that we localised in, it was 42.  We did not localise in Klingon even though I really wanted to.
Let me tell you what my talk is not about, about things we already know, that date and time is difficult.  If you really want to know what we all think that's incorrect about time there is a cool article called Falsehoods Programmers Believe About Time and, if that's not enough, there's still More Falsehoods Programmers Believe About Time and you can look them up.  Very, very cool.
As I said, I was working at Booking.com and we had this calendar that we used for people that own an apartment or a small hotel, and where they can see their reservations, change the prices and things like that but the problem was it wasn't actually a calendar, it was like this infinite scrolling list where you couldn't see any data on, you have to click three times before you can get the real data, so we got a lot of feedback from our users that it didn't really look like our calendars that they were using the competitor with the red logo, which I cannot tell, so we decided to change the calendar.  We did some user research about what we wanted to do and so we did implementation and we started out with making some sketches.  This sketch was made by someone else this morning, but it's still a cool sketch, but we started out with some sketches and implemented our front end and then actually we used Perl at Booking.com so we had some Perl code and you actually don't want to touch a lot of that so we tried to just use the code that was already there and that was it for the calendar.  But then we needed to localise.  There are 42 different countries at Booking.com and even more regions so if you are German you will know this date format is not really how it looks in Germany and also you are used that the euro sign is at the end.  Things like that.  If you look at the US, it will actually - a week will start at Sunday; the date format is completely different.  The price is dollars.  And for those dates things, we actually decided to use Moment.js.  Also not to talk about Moment.js, I will briefly go through it, what we did use, but Moment.js has very good localisation data as well.  This morning Matt was talking about js-joda and date - it's not the right name - date functions, it should be, and about the ECMAScript temporal proposals, if you want to know about those, just go and watch his talk when it's online.  So we had this - say we have this sketch, we implement this sketch, and we wanted to add the names of the weeks all along the top.  We need to know: well, what does the first day of the week start with?  It starts with Sunday or Monday?  You can easily get that with Moment.js, with locale data, you can get the first day of the week and return with a 0 or 1 and then you can get the names of the week in the locale which you've selected which will in this case generate Sunday through Saturday, and we use that at the top.  Then we needed to get the first day of the month - well, first day of the calendar which is interesting because it's not the first day of the month.  So we used - we could just use start of month and then start of week, and then get the number of the date, and the same goes for the end of the month.  Then just fill them all out.  So that was easily to generate the first part of the calendar.
Then I needed to find what kind of format does this country use?  It's not always - it wasn't very easy to find but it was somewhere in a more private variable called long date format, and then we used a capital L, and that was basically it.  So I'm going to go through this very fast but just to get a sense of what we were kind of working with.  This was basically the localisation then for all the languages, very easily.  So then we went on the testing and just going through the languages to see if everything is okay, and then I hit the bump that I always forget, and that is RTL, which stands for right to left languages.  Those are languages like Arabic or Hebrew so if you have this calendar it's not only this script that goes from right to left, you actually want to change everything from right to left so for example you want to switch the right column to the left, and then also switch everything around as well so that your Monday also starts on the right side, your week.
So this is all done in CSS, so you just change your float left to your float right, your margin left to your margin right.  If you have something inline or inline block it will automatically go right.  The only thing is the two arrows, we switch the functionality around because if you click on the left arrow you want to go to a month in the future instead of the past.  We could have just rotated the arrows which would have been easy with CSS.  So we just clicked through everything, fixed a few bugs and then we went on to more testing.  If you want to know about unit testing at Booking.com, you can give me a few beers later on and I will tell you a whole lot about unit testing at Booking.com.  I don't work there anymore so I can now tell you everything I know.  [Laughter]
But what we did was we added just a whole bunch of our users into a beta group, not asking them, because why would you ask them?  Just put them in a beta and then add a feedback at the top where they could do a thumbs up and a thumbs down and get a little bit of feedback, just a text area.
What do you want to know about users giving you feedback?  It is not always that useful.  Most of the time it's just very short strings like - well, these were the positive ones.  
"We finally have a much better overview and love the new interface."
But they already give you a long thing about how their life is and how good the calendar is in their life and how they finally found the right person that they want to be with just because you have the new calendar.  There's weird stories in there which I will not show.  But there's also just some bad things like, "Hate it, bring the old one back", without saying why they hate it, and, "Who made this?"  Smiling chocolate ice cream, I think.  But if you really dig into the feedback you will find some obscure things that they will tell you which you have to dig through your code to figure out what was actually going on.  Because these are bug reports and not in the sense that you yourself would write a bug report but, "Hey listen, your reservation is not showing up", and great, what now, because I cannot contact the person really.  So what I did do is I saved not enough data.  That was a big mistake for me.  I just saved their user ID and the language that they selected and I should have done the user agent and a whole bunch of other things but I was lazy and I implemented too late, which is a mistake.  Don't be too lazy with these kind of things.
So I had two things to work with, to do some bug fixing and those four examples that I will just give you, that I just gave you, I will go through them because these were the four most interesting things that I found and which caused me a lot of detective work to figure out what it was.
We had some reservation data on our calendar as well so it showed you more than just a blue bar, it showed you the name and things like that but one person - it's just one random person said: well, my reservations aren't showing up.  They gave a little bit more data about which specific reservation that didn't show up and it was in October 2016, this is reservation, the 15th or 16th, it just wasn't there for him.  And it was weird because I had tested it, it was working, that's how it usually goes, it works on my machine, but for him it didn't work and you don't want that because they will get overbookings and lawsuits.  So first off, just looking through my code to see if I could figure out anything which was a problem and then I thought: well, it must be some localisation thing because that's mostly where the problems originate at Booking.com and I figured out this person lives in Brazil.  So first step: changing the language to Portuguese.  Specifically Brazilian Portuguese because we have that in the website.  I couldn't reproduce the bug.  So next step: I changed the time zone on my laptop to be minus 3 because I saw that they were based in the capital, and it still didn't show up.  I couldn't reproduce the bug.  Then a colleague sitting next to me said: here's the bug, I have it.  What?  What did you do?  He said: well, I switched to Portuguese, changed the time zone to minus 3.  Well, okay, let's just check out any other settings that we might have and we couldn't figure it out for a very long time until I noticed there's a Wiki page on time in Brazil which gives you a lot of weird data like their Summer Time is different when they have carnival during the time when they would normally switch to Summer Time but also that not their entire country adheres to Summer Time.  I thought it couldn't be Summer Time, it's October, but I was just forgetting one of the falsehoods I believe about time which is Summer Time is always true in my summer, which is not true for their hemisphere, of course, because Summer Time starts in October.  So my colleague selected capital of Brazil as his time zone and I selected a city just north of Brazil, and that city north of Brazil didn't adhere to Summer Time and the capital did adhere to it, so I found a crappy piece of code that I wrote which compared two different dates and there was one thing that says "add one day", and I learned that in Moment.js "add one day" does not mean add one day; it sort of does, but it just adds 24 hours.  Compared with this, it basically meant the day was never going to be the same because the day would be one day, and day 3 would be midnight.  By the way, smart quotes, not fun.  The day there.  Sorry.
So I just switched them around and that was fixed.  [Laughter]
Great.  I could also fix my code to make it better, but I was leaving anyway.  So another thing is: why are closed dates red?  A very obscure question but they came up in a different kind of string so I could figure out that it said: this date, if they closed it, so I don't accept any reservations, we show this red bar.  Well, that's good, right?  So what do you think of this?  Is this a good day at the stock market?  I wouldn't think so, but this is a very good day at the stock market because in eastern Asia, red often means that it's something good instead of something bad.  So their convention is something is closed and you are showing this is good?  It's not very fun because sometimes you show that it's good even though they close it because they have a funeral or something, and you don't want to do that, so we switched it around to make it grey and that was neutral enough for people, so learning from this, just watch out with colours because you can do things wrong for some countries.
So the third one is that the day selection is not working.  This was our date selection, with a From and a To, and when you click on it, it showed your jQuery, your date picker.  Why jQuery UI date picker?  Well, because we had already used it and we are just re-using things.  At first, it's not a big problem but you cannot see what date and what month it is so you have to get the date format for a moment to see: okay, this is month, day, year.  Then, if you want to change that, if you want to connect it with the date picker you can do parse date and then it says month, day, year, and you add the date.  But this gives an error.  This does not work because jQuery UI uses this format.  Month, day, year, lower case, and then the year changes to yy, so I created a little script for it.  I already did this, so it was before the bug showed up.  So I created a script, put it - by the way, I hope you will not need it - but the problem with this script led in this part.  If you were here a couple of talks before about regular expressions, this is a very easy regular expression, it kind of finds the slashes and dashes in the day format, you have to figure out where the delimiters are.  If you are from Germany you've probably already figured out a problem because most complaints come from German users.  It also needed a dot because the format in Germany mostly is a dot in between, so I thought: well, what the hell, let's just change it to /W and then be done with it.  Most people didn't report a bug anymore except for one country, and I told you that I saved the language of the country, and I actually saved the full language name, so I saved this for the country that was the problem.  So I thought: okay, which language is that?  So I used my very great tool for that, Google Translate.  Google Translate said: okay, I've detected this is Slovenian.  Are there any in the room by the way?  Any Slovakians in the room?  So the top one is Slovakian, and the bottom one is Slovenian.  It's a slight difference.  So after I checked it's Slovenian and thought: still not seeing the bug - and then it says in the bottom, "Did you mean this?", and I'm like, "No, not really!"
So Google Translate does know that this word is in Slovak because if you just change the word to Slovak, it translates it, so what was the problem here?  The date delimiter was dot space.  Great.  So just adding a plus to my regular expression fixed everything.  Maybe something else is broken but at least it fixed this.
The last thing that I want to show you has nothing to do with date or time; it has something to do with the prices that weren't showing up properly.  So we have the reservation, we have the number, we also showed the prices.  Showed up perfectly fine.  We checked and nobody ever had a price that was higher than 99,000 euros, so should be fine.  But yeah, not always.  So this was 1 million Indonesian Rupiah, I think, so it's not always just about dates and times, it's also about prices, it's about changing the colours, it's about cultural differences as well.
I think I went a little bit too fast but my conclusion to wrap this up is a couple of things: so do not make any assumptions.  That's basically what a lot of people have already said at a number of different conferences but even if you read all the assumptions that people make about date and time there's a lot of assumptions that you are probably going to make.  And localisation is not just translation.  Translation is a part of localisation.  It's more than that.  It's cultural differences.  It's date and time, it's colours, not just about date and time but also colours and things like that.  Gathering meaningful feedback, so not to do things that I did, it's gathering feedback from the users, it's great, but just save their user agent, save the URL that they are on, save maybe the way you look at languages, so maybe instead of the Slovenian or the Slovakian word that I said, just save SK which makes more sense for programmers.  And bugs will happen.  It doesn't matter how much you test it, it doesn't matter how much experience you have in localisation, every time you do something, bugs will happen and they will always be there, even if you fix all the bugs that people are reporting.  It will still be localisation bugs because sometimes people are just used to localisation issues, and change their language to English just so that they know this probably works better.
But localisation is still important because if you don't have German language, a lot of people can't use your website and you will say I don't have a lot of Germans on my website.  You need to change your language.  It's about accessibility.
And bug fixing is like being a detective, kind of like being a travelling detective, because I feel like I have travelled to all different kinds of regions just to figure out what the problem was.  I didn't actually travel because if that was the case that I could travel for bug fixes I might still be working at Booking.  So have fun with your bug fixes and just feel like that you are actually trying to find something that no one else has ever done before.
So thank you very much.  This is my Twitter handle, if you want to follow Fronteers, this is the Fronteers Twitter handle.  My email address - I love getting emails.  This is my ICQ number.  Thank you very much.  [Applause]